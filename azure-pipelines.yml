# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr: none

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

variables:
  CONTAINER: "test"
  BLOB_PREFIX: "test/test-"

stages:
- stage: Build
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: Build
    steps:
    - script: |
        echo "Build"
      displayName: Build script
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
        architecture: 'x64'
    - script: |
        pip install azure-storage-queue azure-storage-blob
        pip --version
        pip list
        python --version
      displayName: test
    - task: PythonScript@0
      inputs:
        scriptSource: 'inline'
        script: |
          import time
          from azure.storage.blob import BlobServiceClient
          blob_service_client = BlobServiceClient.from_connection_string('$(AZURE_STORAGE_CONNECTION_STRING)')
          local_file_name = '$(BLOB_PREFIX)' + time.strftime("%Y%m%d-%H%M%S")
          with open(upload_file_path, "w") as file:
            file.write("Hello, World!")
          blob_client = blob_service_client.get_blob_client(container='$(CONTAINER)', blob=local_file_name)
          with open(upload_file_path, "rb") as data:
            blob_client.upload_blob(data)
      env:
        AZURE_STORAGE_CONNECTION_STRING: '$(AZURE_STORAGE_CONNECTION_STRING)'